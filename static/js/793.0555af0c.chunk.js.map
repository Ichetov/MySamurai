{"version":3,"file":"static/js/793.0555af0c.chunk.js","mappings":"oQAaMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WA+BH,OA/BGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MAIJ,WACE,IAAIC,EAEFA,EADEC,KAAKC,MAAMC,OAAOC,OACfH,KAAKC,MAAMC,OAAOC,OAElBH,KAAKC,MAAME,OAEhBH,KAAKC,MAAMG,SAASL,GACpBC,KAAKC,MAAMI,UAAUN,KAOxB,oBAID,WAGE,OACE,+BACA,SAAC,KAAD,UAAaC,KAAKC,cAGrB,EA/BGH,CAAyBQ,EAAAA,WAsE/B,WAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAnBsB,SAACC,GAAD,MAAY,CAClCC,QAASD,EAAME,eAAeD,QAC9BE,OAAQH,EAAME,eAAeC,OAC7BT,OAAQM,EAAMI,YAAYd,GAC1Be,OAAQL,EAAMI,YAAYC,UAeD,CACvBC,gBAAAA,EAAAA,GACAX,SAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAW,aAAAA,EAAAA,KAEFC,EAAAA,EACAC,EAAAA,EARF,CASEpB","sources":["components/Profile/ProfileConteiner.jsx"],"sourcesContent":["\r\nimport { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport * as axios from \"axios\";\r\nimport { connect } from 'react-redux';\r\n// import {setUsersProfile} from './../profileReducer'\r\nimport { profilee, setUsersProfile, getStatus,upDateStatus } from \"./../../redux/profile-reducer\";\r\nimport withRouter from './withRouter'\r\nimport { profileAPI } from '../../api/api';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { withAutchRedirect } from '../../hoc/withAutchRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileConteiner extends Component {\r\n\r\n  \r\n   \r\n  componentDidMount(){\r\n    let id;\r\n    if (this.props.router.userId) {\r\n      id = this.props.router.userId;\r\n    } else {\r\n      id = this.props.userId;\r\n    }\r\n      this.props.profilee(id)\r\n      this.props.getStatus(id)\r\n  //     axios(`https://social-network.samuraijs.com/api/1.0/profile/${id}`).then((res) => {\r\n  //     this.props.setUsersProfile(res.data)\r\n        \r\n  //   //  this.props.setUsers(res.data.items);\r\n  //   //  this.props.setPlaceHold(false);\r\n  //  });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return(\r\n      <>\r\n      <Profile {...this.props}/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// const redirectComponent = (props)=>{\r\n//  if (props.isAuth === false) {\r\n//    return <Navigate to=\"/login\" />;\r\n//  }\r\n//   return <ProfileConteiner {...props}/>;\r\n// }\r\n\r\n// const mapStateToPropsForRedirect = (state) => ({\r\n//   isAuth: state.authReducer.isAuth,\r\n// });\r\n\r\n// let redirectComponent = withAutchRedirect(ProfileConteiner);\r\n\r\n// redirectComponent = connect(mapStateToPropsForRedirect)(redirectComponent);\r\n\r\n\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  profile: state.profileReducer.profile,\r\n  status: state.profileReducer.status,\r\n  userId: state.authReducer.id,\r\n  isAuth: state.authReducer.isAuth,\r\n});\r\n\r\n// let WithUrl = withRouter(redirectComponent);\r\n\r\n// const ProfileCont = connect(mapStatetoProps, {\r\n//   setUsersProfile,\r\n//   profilee\r\n// })(WithUrl);\r\n \r\n\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStatetoProps, {\r\n    setUsersProfile,\r\n    profilee,\r\n    getStatus,\r\n    upDateStatus,\r\n  }),\r\n  withAutchRedirect,\r\n  withRouter,\r\n)(ProfileConteiner);\r\n"],"names":["ProfileConteiner","id","this","props","router","userId","profilee","getStatus","Component","compose","connect","state","profile","profileReducer","status","authReducer","isAuth","setUsersProfile","upDateStatus","withAutchRedirect","withRouter"],"sourceRoot":""}