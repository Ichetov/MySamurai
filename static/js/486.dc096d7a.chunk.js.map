{"version":3,"file":"static/js/486.dc096d7a.chunk.js","mappings":"kJACA,MAA0B,yBAA1B,EAAoE,gCAApE,EAAwH,mCCAxH,EAAwC,uC,SCKxC,EAJgB,SAACA,GACf,OAAO,gBAAKC,UAAWC,EAAhB,SAA0CF,EAAMG,WCFzD,EAAqC,uC,UCUrC,EATmB,SAACH,GAClB,IAAII,EAAO,YAAcJ,EAAMK,GAC/B,OACE,iBAAKJ,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASI,GAAIF,EAAb,SAAoBJ,EAAMO,OAAgB,Q,iDCG5CC,GAAcC,EAAAA,EAAAA,GAAiB,IAuB7BC,GAAmBC,EAAAA,EAAAA,GAAU,CACjCC,KAAM,WADiBD,EAtBL,SAACX,GAEnB,OACE,kBAAMa,SAAUb,EAAMc,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CACER,KAAK,cACLS,UAAWC,EAAAA,EACXC,YAAY,oGACZC,SAAU,CAACC,EAAAA,EAAeZ,QAK9B,0BACE,yFAkDR,EAtCgB,SAAC,GAAgG,IAA9Fa,EAA6F,EAA7FA,YAAaC,EAAgF,EAAhFA,eAAgDC,GAAgC,EAAjEC,YAAiE,EAApDC,mBAAoD,EAAhCF,oBAAgC,EAAbG,OAEnGC,QAAQC,IAAI,WAeV,OACE,iBAAK3B,UAAWC,EAAhB,WAGE,gBAAKD,UAAWC,EAAhB,SACGmB,EAAYQ,KAAI,SAACC,GAChB,OAAO,SAAC,EAAD,CAA0BvB,KAAMuB,EAAKvB,KAAMF,GAAIyB,EAAKzB,IAAnCyB,EAAKzB,UAGjC,gBAAKJ,UAAWC,EAAhB,SACGoB,EAAeO,KAAI,SAACC,GACnB,OAAO,SAAC,EAAD,CAAuB3B,QAAS2B,EAAK3B,SAAvB2B,EAAKzB,UAI9B,SAACK,EAAD,CAAkBG,SApBN,SAACkB,GAChBJ,QAAQC,IAAIG,EAASP,aACrBD,EAAmBQ,EAASP,oB,8BCuB/B,GAAeQ,E,QAAAA,KACbC,EAAAA,EAAAA,KAxCoB,SAACC,GAEtB,MAAO,CACLb,YAAaa,EAAMC,eAAed,YAClCC,eAAgBY,EAAMC,eAAeb,eACrCE,YAAaU,EAAMC,eAAeX,gBAUZ,SAACY,GACxB,MAAO,CACLX,mBAAoB,SAACY,GACnBD,GAASE,EAAAA,EAAAA,IAAcD,KAEzBd,mBAAoB,SAACc,GACnBD,GAASG,EAAAA,EAAAA,IAAiBF,SAoB9BG,EAAAA,EAFF,CAGEC","sources":["webpack://app_02/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://app_02/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://app_02/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsComponent.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__13cGX\",\"dialogs__items\":\"Dialogs_dialogs__items__vft6a\",\"dialogs__messages\":\"Dialogs_dialogs__messages__ZzfAa\",\"dialogs__messagesItem\":\"Dialogs_dialogs__messagesItem__l4jCm\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs__messagesItem\":\"Message_dialogs__messagesItem__DNMwB\"};","import s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialogs__messagesItem}>{props.message}</div>;\r\n};\r\n\r\nexport default Message","// extracted by mini-css-extract-plugin\nexport default {\"dialogs__itemsItem\":\"DialogItem_dialogs__itemsItem__B0fbw\",\"active\":\"DialogItem_active__Yb7am\"};","import s from './DialogItem.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialogs__itemsItem}>\r\n      <NavLink to={path}>{props.name}</NavLink>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n"," import s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\nimport { useEffect } from 'react';\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from '../common/FormConntrol/FormsControls';\r\nimport {requiredField, maxLengthCreator} from './../../utils/validators/validators'\r\n\r\nlet maxLength10 = maxLengthCreator(50)\r\nconst DialogsForm = (props)=>{\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"messageText\"\r\n          component={Textarea}\r\n          placeholder=\"Введиту сообщение\"\r\n          validate={[requiredField, maxLength10]}\r\n          // onChange={(e) => props.onNewMessageChange(e.target.value)}\r\n          // value={props.messageText}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Добавить</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n// onClick={props.onSendMessageClick}\r\nconst DialogsReduxForm = reduxForm({\r\n  form: \"dialogs\",\r\n})(DialogsForm);\r\n\r\n\r\nconst Dialogs = ({ dialogsName, dialogsMessage,messageText, onNewMessageChange, onSendMessageClick,isAuth }) => {\r\n  // const textRef = useRef()\r\nconsole.log('Dialogs');\r\n\r\n  // let onNewMessageChange = (e) => {\r\n  //   dispatch(addNewMessage(e.target.value));\r\n  // };\r\n\r\n  // let onSendMessageClick = () => {\r\n  //   dispatch(addMessageAction());\r\n  // };\r\n  // const navigate = useNavigate();\r\n const onSubmit = (formData) => {\r\n   console.log(formData.messageText);\r\n   onSendMessageClick(formData.messageText);\r\n };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      {}\r\n\r\n      <div className={s.dialogs__items}>\r\n        {dialogsName.map((item) => {\r\n          return <DialogItem key={item.id} name={item.name} id={item.id} />;\r\n        })}\r\n      </div>\r\n      <div className={s.dialogs__messages}>\r\n        {dialogsMessage.map((item) => {\r\n          return <Message key={item.id} message={item.message} />;\r\n        })}\r\n      </div>\r\n\r\n      <DialogsReduxForm onSubmit = {onSubmit}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport { addNewMessage, addMessageAction } from \"./../../redux/profile-reducer\";\r\n// import StoreContext from './../../StoreContext';\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { withAutchRedirect } from \"../../hoc/withAutchRedirect\";\r\nimport { compose } from \"redux\";\r\n// const DialogsComonent = () => {\r\n//   // let onNewMessageChange = (text) => {\r\n//   //   store.dispatch(addNewMessage(text));\r\n//   // };\r\n//   // let onSendMessageClick = () => {\r\n//   //   store.dispatch(addMessageAction());\r\n//   // };\r\n//   // let state = store.getState().profileReducer;\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {( store ) => (\r\n//         <Dialogs\r\n//           state={store.getState().profileReducer}\r\n//           onNewMessageChange={(text)=>{\r\n//              store.dispatch(addNewMessage(text));\r\n//           }}\r\n//           onSendMessageClick={()=>{\r\n//             store.dispatch(addMessageAction());\r\n//           }}\r\n//         />\r\n//       )}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n\r\n return {\r\n   dialogsName: state.profileReducer.dialogsName,\r\n   dialogsMessage: state.profileReducer.dialogsMessage,\r\n   messageText: state.profileReducer.messageText,\r\n\r\n\r\n   //  profileReducer: state.profileReducer\r\n };\r\n}\r\n\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch)=>{\r\n  return {\r\n    onNewMessageChange: (text) => {\r\n      dispatch(addNewMessage(text));\r\n    },\r\n    onSendMessageClick: (text)=>{\r\n      dispatch(addMessageAction(text));\r\n    }\r\n  };\r\n}\r\n\r\n// let redirectComponent = withAutchRedirect(Dialogs);\r\n\r\n\r\n\r\n// const redirectComponent = (props) => {\r\n//  if (props.isAutch === false) {\r\n//    return <Navigate to=\"/login\" />;\r\n//  }\r\n//   return <Dialogs {...props} />;\r\n// };\r\n\r\n// const DialogsComonent = connect(mapStateToProps, mapDispatchToProps)(redirectComponent);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAutchRedirect\r\n)(Dialogs);\r\n"],"names":["props","className","s","message","path","id","to","name","maxLength10","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","dialogsName","dialogsMessage","onSendMessageClick","messageText","onNewMessageChange","isAuth","console","log","map","item","formData","compose","connect","state","profileReducer","dispatch","text","addNewMessage","addMessageAction","withAutchRedirect","Dialogs"],"sourceRoot":""}